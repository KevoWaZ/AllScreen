
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  bio: 'bio'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PersonScalarFieldEnum = {
  id: 'id',
  name: 'name',
  profile_path: 'profile_path',
  job: 'job',
  movieId: 'movieId'
};

exports.Prisma.MovieScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  poster: 'poster',
  release_date: 'release_date',
  runtime: 'runtime'
};

exports.Prisma.MovieGenreScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ProductionCompanyScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.TVShowScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  endYear: 'endYear',
  poster: 'poster',
  first_air_date: 'first_air_date'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  rating: 'rating',
  comment: 'comment',
  userId: 'userId',
  movieId: 'movieId',
  TVId: 'TVId',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WatchedScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  movieId: 'movieId',
  TVId: 'TVId',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WatchlistScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  movieId: 'movieId',
  TVId: 'TVId',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ListScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  userId: 'userId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.ShowType = exports.$Enums.ShowType = {
  MOVIE: 'MOVIE',
  TVSHOW: 'TVSHOW'
};

exports.Prisma.ModelName = {
  User: 'User',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification',
  Person: 'Person',
  Movie: 'Movie',
  MovieGenre: 'MovieGenre',
  ProductionCompany: 'ProductionCompany',
  TVShow: 'TVShow',
  Review: 'Review',
  Watched: 'Watched',
  Watchlist: 'Watchlist',
  List: 'List'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/media/kevin/test/DEV/allscreen/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/media/kevin/test/DEV/allscreen/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id            String      @id\n  name          String      @unique\n  email         String      @unique\n  emailVerified Boolean\n  image         String?\n  createdAt     DateTime\n  updatedAt     DateTime\n  bio           String?\n  lists         List[]\n  reviews       Review[]\n  watched       Watched[]\n  watchlists    Watchlist[]\n  accounts      Account[]\n  sessions      Session[]\n\n  @@map(\"user\")\n}\n\nmodel Session {\n  id        String   @id\n  expiresAt DateTime\n  token     String   @unique\n  createdAt DateTime\n  updatedAt DateTime\n  ipAddress String?\n  userAgent String?\n  userId    String\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"session\")\n}\n\nmodel Account {\n  id                    String    @id\n  accountId             String\n  providerId            String\n  userId                String\n  accessToken           String?\n  refreshToken          String?\n  idToken               String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  password              String?\n  createdAt             DateTime\n  updatedAt             DateTime\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"account\")\n}\n\nmodel Verification {\n  id         String    @id\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime?\n  updatedAt  DateTime?\n\n  @@map(\"verification\")\n}\n\nmodel Person {\n  id                   Int      @id\n  name                 String\n  profile_path         String\n  job                  String[]\n  directedMovies       Movie[]  @relation(\"MovieDirectors\")\n  producedMovies       Movie[]  @relation(\"MovieProducers\")\n  execProducedMovies   Movie[]  @relation(\"MovieExecutiveProducers\")\n  writtenMovies        Movie[]  @relation(\"MovieWriters\")\n  composedMovies       Movie[]  @relation(\"MovieComposers\")\n  cinematographyMovies Movie[]  @relation(\"MovieCinematographers\")\n  actedMovies          Movie[]  @relation(\"MovieActors\")\n  Movie                Movie?   @relation(fields: [movieId], references: [id])\n  movieId              Int?\n}\n\nmodel Movie {\n  id                  Int                 @id @default(autoincrement())\n  title               String\n  description         String?\n  poster              String?\n  release_date        DateTime?\n  runtime             Int?\n  genres              MovieGenre[]        @relation(\"MovieToGenre\")\n  productionCompanies ProductionCompany[] @relation(\"MovieToProductionCompany\")\n  reviews             Review[]\n  watched             Watched[]\n  watchlists          Watchlist[]\n  lists               List[]              @relation(\"MovieToList\")\n  directors           Person[]            @relation(\"MovieDirectors\")\n  producers           Person[]            @relation(\"MovieProducers\")\n  execProducers       Person[]            @relation(\"MovieExecutiveProducers\")\n  writers             Person[]            @relation(\"MovieWriters\")\n  composers           Person[]            @relation(\"MovieComposers\")\n  cinematographers    Person[]            @relation(\"MovieCinematographers\")\n  actors              Person[]            @relation(\"MovieActors\")\n  Person              Person[]\n}\n\nmodel MovieGenre {\n  id     Int     @id\n  name   String\n  movies Movie[] @relation(\"MovieToGenre\")\n}\n\nmodel ProductionCompany {\n  id     Int     @id\n  name   String\n  movies Movie[] @relation(\"MovieToProductionCompany\")\n}\n\nmodel TVShow {\n  id             Int         @id @default(autoincrement())\n  title          String\n  description    String?\n  endYear        Int?\n  poster         String?\n  first_air_date DateTime?\n  reviews        Review[]\n  watched        Watched[]\n  watchlists     Watchlist[]\n  lists          List[]      @relation(\"TVShowToList\")\n}\n\nmodel Review {\n  id        String   @id @default(uuid())\n  rating    Float\n  comment   String?\n  userId    String\n  movieId   Int?\n  TVId      Int?\n  type      ShowType\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  TVShow    TVShow?  @relation(fields: [TVId], references: [id])\n  movie     Movie?   @relation(fields: [movieId], references: [id])\n  user      User     @relation(fields: [userId], references: [id])\n}\n\nmodel Watched {\n  id        String   @id @default(uuid())\n  userId    String\n  movieId   Int?\n  TVId      Int?\n  type      ShowType\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  TVShow    TVShow?  @relation(fields: [TVId], references: [id])\n  movie     Movie?   @relation(fields: [movieId], references: [id])\n  user      User     @relation(fields: [userId], references: [id])\n}\n\nmodel Watchlist {\n  id        String   @id @default(uuid())\n  userId    String\n  movieId   Int?\n  TVId      Int?\n  type      ShowType\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  TVShow    TVShow?  @relation(fields: [TVId], references: [id])\n  movie     Movie?   @relation(fields: [movieId], references: [id])\n  user      User     @relation(fields: [userId], references: [id])\n}\n\nmodel List {\n  id          String   @id @default(uuid())\n  name        String\n  description String?\n  userId      String\n  user        User     @relation(fields: [userId], references: [id])\n  movies      Movie[]  @relation(\"MovieToList\")\n  TVShows     TVShow[] @relation(\"TVShowToList\")\n}\n\nenum ShowType {\n  MOVIE\n  TVSHOW\n}\n",
  "inlineSchemaHash": "0c3e6c084ebfcfcaeb75cc37a5b334909509827f7a90d0b4b53558102f2ff16e",
  "copyEngine": false
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lists\",\"kind\":\"object\",\"type\":\"List\",\"relationName\":\"ListToUser\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToUser\"},{\"name\":\"watched\",\"kind\":\"object\",\"type\":\"Watched\",\"relationName\":\"UserToWatched\"},{\"name\":\"watchlists\",\"kind\":\"object\",\"type\":\"Watchlist\",\"relationName\":\"UserToWatchlist\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"}],\"dbName\":\"user\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":\"session\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":\"account\"},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification\"},\"Person\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile_path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"job\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"directedMovies\",\"kind\":\"object\",\"type\":\"Movie\",\"relationName\":\"MovieDirectors\"},{\"name\":\"producedMovies\",\"kind\":\"object\",\"type\":\"Movie\",\"relationName\":\"MovieProducers\"},{\"name\":\"execProducedMovies\",\"kind\":\"object\",\"type\":\"Movie\",\"relationName\":\"MovieExecutiveProducers\"},{\"name\":\"writtenMovies\",\"kind\":\"object\",\"type\":\"Movie\",\"relationName\":\"MovieWriters\"},{\"name\":\"composedMovies\",\"kind\":\"object\",\"type\":\"Movie\",\"relationName\":\"MovieComposers\"},{\"name\":\"cinematographyMovies\",\"kind\":\"object\",\"type\":\"Movie\",\"relationName\":\"MovieCinematographers\"},{\"name\":\"actedMovies\",\"kind\":\"object\",\"type\":\"Movie\",\"relationName\":\"MovieActors\"},{\"name\":\"Movie\",\"kind\":\"object\",\"type\":\"Movie\",\"relationName\":\"MovieToPerson\"},{\"name\":\"movieId\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Movie\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"poster\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"release_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"runtime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"genres\",\"kind\":\"object\",\"type\":\"MovieGenre\",\"relationName\":\"MovieToGenre\"},{\"name\":\"productionCompanies\",\"kind\":\"object\",\"type\":\"ProductionCompany\",\"relationName\":\"MovieToProductionCompany\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"MovieToReview\"},{\"name\":\"watched\",\"kind\":\"object\",\"type\":\"Watched\",\"relationName\":\"MovieToWatched\"},{\"name\":\"watchlists\",\"kind\":\"object\",\"type\":\"Watchlist\",\"relationName\":\"MovieToWatchlist\"},{\"name\":\"lists\",\"kind\":\"object\",\"type\":\"List\",\"relationName\":\"MovieToList\"},{\"name\":\"directors\",\"kind\":\"object\",\"type\":\"Person\",\"relationName\":\"MovieDirectors\"},{\"name\":\"producers\",\"kind\":\"object\",\"type\":\"Person\",\"relationName\":\"MovieProducers\"},{\"name\":\"execProducers\",\"kind\":\"object\",\"type\":\"Person\",\"relationName\":\"MovieExecutiveProducers\"},{\"name\":\"writers\",\"kind\":\"object\",\"type\":\"Person\",\"relationName\":\"MovieWriters\"},{\"name\":\"composers\",\"kind\":\"object\",\"type\":\"Person\",\"relationName\":\"MovieComposers\"},{\"name\":\"cinematographers\",\"kind\":\"object\",\"type\":\"Person\",\"relationName\":\"MovieCinematographers\"},{\"name\":\"actors\",\"kind\":\"object\",\"type\":\"Person\",\"relationName\":\"MovieActors\"},{\"name\":\"Person\",\"kind\":\"object\",\"type\":\"Person\",\"relationName\":\"MovieToPerson\"}],\"dbName\":null},\"MovieGenre\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"movies\",\"kind\":\"object\",\"type\":\"Movie\",\"relationName\":\"MovieToGenre\"}],\"dbName\":null},\"ProductionCompany\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"movies\",\"kind\":\"object\",\"type\":\"Movie\",\"relationName\":\"MovieToProductionCompany\"}],\"dbName\":null},\"TVShow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endYear\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"poster\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"first_air_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToTVShow\"},{\"name\":\"watched\",\"kind\":\"object\",\"type\":\"Watched\",\"relationName\":\"TVShowToWatched\"},{\"name\":\"watchlists\",\"kind\":\"object\",\"type\":\"Watchlist\",\"relationName\":\"TVShowToWatchlist\"},{\"name\":\"lists\",\"kind\":\"object\",\"type\":\"List\",\"relationName\":\"TVShowToList\"}],\"dbName\":null},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"movieId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"TVId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ShowType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"TVShow\",\"kind\":\"object\",\"type\":\"TVShow\",\"relationName\":\"ReviewToTVShow\"},{\"name\":\"movie\",\"kind\":\"object\",\"type\":\"Movie\",\"relationName\":\"MovieToReview\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewToUser\"}],\"dbName\":null},\"Watched\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"movieId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"TVId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ShowType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"TVShow\",\"kind\":\"object\",\"type\":\"TVShow\",\"relationName\":\"TVShowToWatched\"},{\"name\":\"movie\",\"kind\":\"object\",\"type\":\"Movie\",\"relationName\":\"MovieToWatched\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWatched\"}],\"dbName\":null},\"Watchlist\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"movieId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"TVId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ShowType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"TVShow\",\"kind\":\"object\",\"type\":\"TVShow\",\"relationName\":\"TVShowToWatchlist\"},{\"name\":\"movie\",\"kind\":\"object\",\"type\":\"Movie\",\"relationName\":\"MovieToWatchlist\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWatchlist\"}],\"dbName\":null},\"List\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ListToUser\"},{\"name\":\"movies\",\"kind\":\"object\",\"type\":\"Movie\",\"relationName\":\"MovieToList\"},{\"name\":\"TVShows\",\"kind\":\"object\",\"type\":\"TVShow\",\"relationName\":\"TVShowToList\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

